#!/usr/bin/env ruby

require "rubygems"
require "bundler/setup"
require "em-apn"

TOKEN = "fe9515ba7556cfdcfca6530235c95dff682fac765838e749a201a7f6cf3792e6"

def notify(client, queue)
  if queue.empty?
    EM.add_periodic_timer(1) { EM.stop }
  else
    queue.pop do |alert|
      notification = EM::APN::Notification.new(TOKEN, :alert => alert)
      client.deliver(notification)

      interval = rand(20).to_f / 100.0
      EM.add_timer(interval) { notify(client, queue) }
    end
  end
end

key_1  = File.join(File.dirname(__FILE__), "..", "certs", "demo.pem")
key_2  = File.join(File.dirname(__FILE__), "..", "certs", "staging.pem")

ENV["APN_ENV"] = "dep" # production

EM.run do

  c1 = EM::APN::Client.new(:gateway => "127.0.0.1", :key => key_1, :cert => key_1)
  c1.on_error do |response|
    puts response
  end

  c2 = EM::APN::Client.new(:gateway => "127.0.0.1", :key => key_2, :cert => key_2)
  c2.on_error do |response|
    puts response
  end

  connector = EM::APN::ConnectionManager.new(c2, c1)

  queue = EM::Queue.new
  queue.push *((1..5).to_a)
  queue.push "DISCONNECT"
  queue.push *((6..10).to_a)
  queue.push "DISCONNECT"
  queue.push *((11..15).to_a)

  EM.next_tick { notify(connector, queue) }
end
